{
    "contents" : "---\ntitle: \"Influenza report\"\nauthor: \"Team Exploration_Breakout\"\ndate: '`r format(Sys.Date(), \"%B %d, %Y\")`'\noutput: html_document\n---\n```{r echo=FALSE, warning=FALSE, message=F}\n\nlibrary(ggplot2)\nlibrary(dplyr)\n\nrm(list=ls())\ndata(zip.regions)\n\n\nmultiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {\n  library(grid)\n  \n  # Make a list from the ... arguments and plotlist\n  plots <- c(list(...), plotlist)\n  \n  numPlots = length(plots)\n  \n  # If layout is NULL, then use 'cols' to determine layout\n  if (is.null(layout)) {\n    # Make the panel\n    # ncol: Number of columns of plots\n    # nrow: Number of rows needed, calculated from # of cols\n    layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),\n                     ncol = cols, nrow = ceiling(numPlots/cols))\n  }\n  \n  if (numPlots==1) {\n    print(plots[[1]])\n    \n  } else {\n    # Set up the page\n    grid.newpage()\n    pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))\n    \n    # Make each plot, in the correct location\n    for (i in 1:numPlots) {\n      # Get the i,j matrix positions of the regions that contain this subplot\n      matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))\n      \n      print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,\n                                      layout.pos.col = matchidx$col))\n    }\n  }\n}\n\n# Note: Code above will require installing devtools package and installing and loading choroplethrZip package. To do that use the lines # below:\nlibrary(devtools)\n#install_github('arilamstein/choroplethrZip@v1.3.0')\nlibrary(choroplethrZip)\n\n#### houston zips\n#FNY.zips <- c(77002:77051, 77053:77096, 77098, 77099, 77201, 77336, 77338, 77339, 77345,\n#                 77346,77357,77365,77373,77375,77377,77379,77386, 77388, 77396, 77401, 77406,\n#                 77407,77429,77433,77447,77449,77450,77477,77478,77484,77489,77493,77494, 77498,  \n#                 77503,77504,77506, 77520,77530,77532,77536,77546,77547,77571,77587,77598)\n\nuser.input <- read.csv(\"C:/Users/user/Dropbox/R code/FNY report/r shiny/test name_texas - harris_request_report_1443557460.csv\")\n\nzip.regions <-read.csv(\"C:/Users/user/Dropbox/R code/FNY report/r shiny/zip_regions.csv\")\n\nFNY.zips <- as.integer(user.input$zipcode)\nFNY.name <- user.input$name[1]\nFNY.ph <- user.input$phone[1]\nFNY.email <- user.input$email[1]\n\n\n\n\nFNY <- read.csv(\"C:/Users/user/Dropbox/EpiHack Analytics FNY Data/FNY_ZIPDATA_from_2012-08-27_to_2015-09-27.csv\")\n\n\nfor (i in 1:2){\n FNY$zips <- paste(rep(0,nrow(FNY)),FNY$zip, sep = \"\")\n}\n\n\nsubstrRight <- function(x, n){\n substr(x, nchar(x)-n+1, nchar(x))\n}\nFNY$zips <- substrRight(FNY$zips, 5)\nFNY <- subset(FNY, FNY$zips %in% FNY.zips)\n\nFNY$symptomsum <- rowSums(FNY[c('fever', 'cough', 'sore_throat', 'chills', \n                                               'fatigue', 'nausea', 'diarrhea', 'bodyache', \n                                               'headache')])\n\ndf.fny <- aggregate(cbind(ili, participants,users, household, \n                          no_symptoms, nausea, symptomsum,\n                          diarrhea) ~ week_of, data = FNY, FUN = sum)\ndf.fny <- df.fny[df.fny$week_of != \"\",]\ndf.fny$week_of <- as.Date(df.fny$week_of, \"%Y-%m-%d\")\ndf.fny <- df.fny[order(df.fny$week_of),]\ndf.fny <- df.fny[df.fny$week_of > \"2013-07-01\",]\nrownames(df.fny) <- 1:nrow(df.fny)\n\ndf.fny$prop.participants <- df.fny$ili/df.fny$participants\ndf.fny$prop.users <- df.fny$ili/df.fny$users\ndf.fny$prop.users[is.nan(df.fny$prop.users) == T] <- 0\n\n\nn <- nrow(df.fny)\n\nlatest.week <- df.fny$week_of[n]\nlatest.ili  <- df.fny$ili[n]\nlatest.participant <- df.fny$participants[n]\nlatest.ili.prop <- round(latest.ili/latest.participant,3)\n\nprev.week <- df.fny$week_of[n-1]\nprev.ili <- df.fny$ili[n-1]\nprev.participant <- df.fny$participants[n-1]\n\ndf.fny$symptomrate <- df.fny$symptomsum/df.fny$participants\nrownames(df.fny) <- 1:nrow(df.fny)\n\ndf.fny <- df.fny[complete.cases(df.fny),]\ndf.fny$proportion <- df.fny$ili/df.fny$participants\ndf.fny$Season <- format(df.fny$week_of, '%Y')\n\ncomp.lw <- if (latest.ili > prev.ili) {\"an increase over\"\n    } else if (latest.ili < prev.ili) {\"a decrease from\"\n    } else  \"the same as\"\n\nmax.ili.prop <- max(df.fny$proportion)\n\ncounty.fips <- zip.regions$county.fips.numeric[zip.regions$region == FNY.zips[1]]\n\ndf.fny2 <- aggregate(cbind(participants) ~ zip, data = FNY, FUN = sum)\nnames(df.fny2)<-c(\"region\",\"value\")\np4<- zip_choropleth(df.fny2,\n              county_zoom=c(county.fips), \n              title=\"Houston City - Count of FNY Participants per ZIP code\",\n              legend=\"Range of FNY Participants in ZIP code\") # The value in county_zoom is a FIPS code for Harris County\n\n\n\n```\n\nDear citizens of **`r FNY.name`**, for the week of **`r latest.week`** we had **`r latest.ili`** out of **`r latest.participant`** report being ill with influenza like illness (ILI). This is **`r comp.lw`** last week. We are grateful for each person who is contributing to our efforts to understand how influenza affects our community. If you wish to participate as a citizen scientist please sign up at FluNearYou.com or contact **`r FNY.name`** health department at **`r FNY.ph`**. \n\n\n**Figure 1** shows the proportion of FNY users within **`r FNY.name`** who reported having ILI symptoms. Currently we see **`r latest.ili.prop*100`%** of reporters with ILI-symptoms.\n\n```{r echo = F}\n\np1 <- ggplot(df.fny, aes(x=week_of, y=proportion, color=Season)) + \n        geom_line() + \n        theme_minimal() +\n        xlab('') + \n        ylim(0, max.ili.prop*1.5) +\n        ggtitle('Proportion of participants reporting ILI') + ylab('Proportion')\n\nprint(p1)\n```\n\n\n**Figure 2** shows the average number of symptoms reported per participant. This past week saw an average of **`r round(df.fny$symptomrate[n],2)`**. This value may suggest the severity of the current status of influenza.\n\n```{r echo = F}\np2 <-  ggplot(df.fny, aes(x=week_of, y=symptomrate, color=Season)) + \n        geom_line() + \n        theme_minimal() +\n        xlab('') + \n        ylab('Symptoms rate') + \n        ggtitle('Symptoms reported per participant')\n\nprint(p2)\n```\n\nThis past week we had **`r latest.participant`** reporters. Our goal is to reach a weekly average of 300. \n\n```{r echo=F}\np3 <- ggplot(df.fny, aes(x = week_of, y = participants, color = Season)) +\n        geom_line() +\n        theme_minimal() + \n        xlab(\"Week\") +\n        ylab(\"Weekly participation\") +\n        ylim(0, max(df.fny$participants*1.1)) + \n        ggtitle(\"Weekly participants who reported to FNY\")\n\nprint(p3)\n\n```\n\n**Figure 4** is a histogram of symptom rates.\n\n```{r echo = F, warning = FALSE, message = FALSE}\n p4 <- ggplot(df.fny, aes(symptomrate)) + \n  geom_histogram(colour = \"lightblue\", fill = \"lightblue\") + theme_minimal() + \n  ylab('Count') + xlab('Symptoms') + ggtitle('Histogram of symptoms per participant')\n\nprint(p4)\n\n```\n\n**Figure 5** is a map of participation by ZIP code.\n\n```{r echo = F, warning = FALSE, message = FALSE}\np5<- zip_choropleth(df.fny2,\n              county_zoom=c(county.fips), \n              title=\"Houston City - Count of FNY Participants per ZIP code\",\n              legend=\"Range of FNY Participants in ZIP code\") # The value in county_zoom is a FIPS code for Harris County\n\nprint(p5)\n\n```\n\n",
    "created" : 1473350759245.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "833252886",
    "id" : "9B6DBCC7",
    "lastKnownWriteTime" : 1473350778,
    "path" : "C:/Users/ericb/Dropbox (HHD)/Code/R code 2/FNY reporting/report_fny.Rmd",
    "project_path" : "report_fny.Rmd",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_markdown"
}